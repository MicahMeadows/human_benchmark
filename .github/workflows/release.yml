name: Build ‚Ä¢ Flutter Linux Release

on:
  # Build on push to main and on any tag (so tagged commits become Releases)
  push:
    branches: [main]
    tags:     ['v*']      # e.g. v1.0.0
  workflow_dispatch:       # manual trigger from the Actions tab

jobs:
  linux-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    # 1Ô∏è‚É£  Check out the repository
    - name: Checkout source
      uses: actions/checkout@v4

    # 2Ô∏è‚É£  Install Flutter‚Äôs Linux desktop prerequisites
    - name: Install Linux build deps
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          clang cmake ninja-build pkg-config \
          libgtk-3-dev liblzma-dev libstdc++-12-dev

    # 3Ô∏è‚É£  Set up Flutter (subosito action caches the SDK automatically)
    - name: Set up Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: stable           # change to beta/nightly if you like
        flutter-version: '3.24.x' # or pin an exact version

    # 4Ô∏è‚É£  Cache pub packages & .dart_tool
    - name: Cache pub packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          ${{ github.workspace }}/.dart_tool
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    # 5Ô∏è‚É£  Enable Linux desktop & fetch dependencies
    - name: Enable Linux desktop
      run: flutter config --enable-linux-desktop

    - name: flutter pub get
      run: flutter pub get

    # 6Ô∏è‚É£  (optional) Run analyzer and tests
    - name: Static analysis
      run: flutter analyze --no-pub --fatal-infos

    - name: Run unit tests
      run: flutter test --coverage

    # 7Ô∏è‚É£  Build the Linux release
    - name: Build (release)
      run: flutter build linux --release

    # 8Ô∏è‚É£  Package the bundle into a tar.gz
    - name: Compress bundle
      run: |
        cd build/linux/x64/release
        tar -czf ${{ github.workspace }}/human_benchmark_linux_${{ github.sha }}.tar.gz bundle

    # 9Ô∏è‚É£  Upload as a workflow artifact (always)
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: human_benchmark_linux_${{ github.sha }}
        path: human_benchmark_linux_${{ github.sha }}.tar.gz
        if-no-files-found: error

    # üîü  Attach to a GitHub Release if this run was triggered by a tag
    - name: Attach to GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: human_benchmark_linux_${{ github.sha }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
